#!/usr/bin/env python3

import argparse
import json
import os
import subprocess
import boto3


def execute(msg):
    s3 = boto3.client('s3')

    s3bucket = msg['s3bucket']
    s3output = msg['s3output']
    asn      = msg['asn']

    # Compute the whois solution for this.
    whois_result = subprocess.check_output([
        '/usr/bin/whois',
            '-h',
                'jwhois.apnic.net',
            'AS%d' % asn
    ])

    path = os.path.join(s3output, 'ASN', '%06d' % asn, 'ASN.txt')
    s3.put_object(
        Bucket=s3bucket,
        Key=path,
        Body=whois_result
    )

    # Compute the prefixes list.
    path = os.path.join(s3output, 'ASN', '%06d' % asn, 'prefixes.yml')
    subprocess.check_call([
        '/usr/bin/bgpalerter-linux-x64',
            'generate',
            '-a',
                str(asn),
            '-o',
                'prefixes.yml'
    ])

    s3.upload_file(
        'prefixes.yml',
        s3bucket,
        path
    )


def loop(args):
    client = boto3.resource('sqs', region_name='us-west-1')
    queue = client.get_queue_by_name(QueueName=args.queue)

    while True:
        for message in queue.receive_messages(MaxNumberOfMessages=1):
            body = json.loads(message.body)

            queue.delete_messages(Entries=[{
                'Id': message.message_id,
                'ReceiptHandle': message.receipt_handle
            }])

def main(argv=None):
    argp = argparse.ArgumentParser()
    argp.add_argument(
        '-q',
        '--queue',
        default='QueueProcessASN'
    )

    args = argp.parse_args()
    loop(args)

if __name__ == '__main__':
    main()
