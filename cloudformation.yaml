AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  # Centos9
  ImageIdParam:
    Description: 'AMI Image ID'
    Type: String
    Default: 'ami-0e2af9288c6d110db'

Resources:
  #====================================================================#
  # SQS Storage queue.
  #====================================================================#
  QueueProcessASN:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: 'QueueProcessASN'
      DelaySeconds: 0
      ReceiveMessageWaitTimeSeconds: 20
      # 1 hour.
      VisibilityTimeout: 3600

  QueueProcessCIDR:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: 'QueueProcessCIDR'
      DelaySeconds: 0
      ReceiveMessageWaitTimeSeconds: 20
      # 1 hour.
      VisibilityTimeout: 3600

  #====================================================================#
  # S3 Storage.
  #====================================================================#
  NetScannerBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: netscanner

  #====================================================================#
  # Configure the VPC
  #====================================================================#

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '172.16.0.0/16'
      Tags:
        - Key: Name
          Value: VPC

  #------------------------------------------------------------------- #
  # Public Subnets
  #------------------------------------------------------------------- #

  VPCSubnet1Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: 'us-west-1a'
      CidrBlock: '172.16.0.0/24'
      Tags:
        - Key: Name
          Value: VPCSubnet1Public

  VPCSubnet2Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: 'us-west-1c'
      CidrBlock: '172.16.1.0/24'
      Tags:
        - Key: Name
          Value: VPCSubnet2Public

  #------------------------------------------------------------------- #
  # Private Subnets
  #------------------------------------------------------------------- #

  #------------------------------------------------------------------- #
  # Attaching the Internet Gateways.
  #------------------------------------------------------------------- #

  VPCInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: VPCInternetGateway

  VPCInternetGatewayAttacher:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: VPCInternetGateway

  VPCRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: VPCRouteTable

  VPCRouteTablePublic:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCInternetGatewayAttacher
    Properties:
      RouteTableId:
        Ref: VPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCInternetGateway

  VPCSubnet1PublicRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: VPCRouteTable
      SubnetId:
        Ref: VPCSubnet1Public

  VPCSubnet2PublicRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: VPCRouteTable
      SubnetId:
        Ref: VPCSubnet2Public

  #====================================================================#
  # IAM Management
  #====================================================================#
  #------------------------------------------------------------------- #
  # Roles
  #------------------------------------------------------------------- #
  NetscanProcessASNRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/'

  NetscanProcessCIDRRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/'

  #------------------------------------------------------------------- #
  # Policies
  #------------------------------------------------------------------- #

  NetscanS3Policy:
      Type: 'AWS::IAM::Policy'
      Properties:
        PolicyName: NetscanS3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:ListBucket'
              Resource:
                - Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: NetScannerBucket
                    - '/*'
                - Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: NetScannerBucket
        Roles:
          - Ref: NetscanProcessASNRole
          - Ref: NetscanProcessCIDRRole

  NetscanQueueProcessASNPolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
        PolicyName: NetscanQueueProcessASNPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'sqs:GetQueueAttributes'
                - 'sqs:GetQueueUrl'
                - 'sqs:ReceiveMessage'
                - 'sqs:DeleteMessage'
                - 'sqs:SendMessage'
              Resource:
                Fn::GetAtt: QueueProcessASN.Arn
        Roles:
          - Ref: NetscanProcessASNRole

  NetscanQueueProcessCIDRPolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
        PolicyName: NetscanQueueProcessCIDRPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'sqs:GetQueueAttributes'
                - 'sqs:GetQueueUrl'
                - 'sqs:ReceiveMessage'
                - 'sqs:DeleteMessage'
              Resource:
                Fn::GetAtt: QueueProcessCIDR.Arn
        Roles:
          - Ref: NetscanProcessCIDRRole

  #------------------------------------------------------------------- #
  # Instance profiles.
  #------------------------------------------------------------------- #

  NetscanProcessCIDRInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - Ref: NetscanProcessCIDRRole

  NetscanProcessASNInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - Ref: NetscanProcessASNRole

  #====================================================================#
  # EC2 Instance Specifications
  #====================================================================#
  #------------------------------------------------------------------- #
  # Security group.
  #------------------------------------------------------------------- #
  NetscanPublicInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: NetscanPublicInstanceSecurityGroup
      GroupDescription: Security group for IP scrapers
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: NetscanPublicInstanceSecurityGroup

  #====================================================================#
  # EC2 Launch Templates & Scaling
  #====================================================================#
  #------------------------------------------------------------------- #
  # Launch template: CIDR Processing
  #------------------------------------------------------------------- #
  NetscanProcessCIDRInstanceTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: 'NetscanProcessCIDR'
      LaunchTemplateData:
        ImageId:
          Ref: ImageIdParam
        InstanceType: 't2.micro'
        KeyName: 'zeek'
        Monitoring:
          Enabled: true
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: true
            DeleteOnTermination: true
            Groups:
              - Ref: NetscanPublicInstanceSecurityGroup
        IamInstanceProfile:
          Name:
            Ref: NetscanProcessCIDRInstanceProfile
        InstanceMarketOptions:
          MarketType: 'spot'
          SpotOptions:
            MaxPrice: .01

  NetscanProcessCIDRAutoscaling:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      MinSize: 0
      MaxSize: 20
      DesiredCapacity: 0
      LaunchTemplate:
        LaunchTemplateId:
          Ref: NetscanProcessCIDRInstanceTemplate
        Version:
          Fn::GetAtt: NetscanProcessCIDRInstanceTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - Ref: VPCSubnet1Public
        - Ref: VPCSubnet2Public

  NetscanProcessCIDRAutoscalingScaleUp:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: NetscanProcessCIDRAutoscaling
      ScalingAdjustment: 1

  NetscanProcessCIDRAutoscalingScaleUpAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: 5
      Statistic: Maximum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      Period: 60
      AlarmActions:
        - Ref: NetscanProcessCIDRAutoscalingScaleUp
      Namespace: 'AWS/SQS'
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - QueueProcessCIDR
              - QueueName

  NetscanProcessCIDRAutoscalingScaleDown:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: NetscanProcessCIDRAutoscaling
      ScalingAdjustment: -5

  NetscanProcessCIDRAutoscalingScaleDownAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: 90
      Statistic: Maximum
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 60
      AlarmActions:
        - Ref: NetscanProcessCIDRAutoscalingScaleDown
      Namespace: 'AWS/SQS'
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - QueueProcessCIDR
              - QueueName

  #------------------------------------------------------------------- #
  # Launch template: ASN Processing
  #------------------------------------------------------------------- #

  NetscanProcessASNInstanceTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: 'NetscanProcessASN'
      LaunchTemplateData:
        ImageId:
          Ref: ImageIdParam
        InstanceType: 't2.large'
        KeyName: 'zeek'
        Monitoring:
          Enabled: true
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: true
            DeleteOnTermination: true
            Groups:
              - Ref: NetscanPublicInstanceSecurityGroup
        IamInstanceProfile:
          Name:
            Ref: NetscanProcessASNInstanceProfile
        InstanceMarketOptions:
          MarketType: 'spot'
          SpotOptions:
            MaxPrice: .05

  NetscanProcessASNAutoscaling:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      MinSize: 0
      MaxSize: 4
      DesiredCapacity: 0
      LaunchTemplate:
        LaunchTemplateId:
          Ref: NetscanProcessASNInstanceTemplate
        Version:
          Fn::GetAtt: NetscanProcessASNInstanceTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - Ref: VPCSubnet1Public
        - Ref: VPCSubnet2Public

  NetscanProcessASNAutoscalingScaleUp:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: NetscanProcessASNAutoscaling
      ScalingAdjustment: 1

  NetscanProcessASNAutoscalingScaleUpAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: 5
      Statistic: Maximum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      Period: 60
      AlarmActions:
        - Ref: NetscanProcessASNAutoscalingScaleUp
      Namespace: 'AWS/SQS'
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - QueueProcessASN
              - QueueName

  NetscanProcessASNAutoscalingScaleDown:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: NetscanProcessASNAutoscaling
      ScalingAdjustment: -5

  NetscanProcessASNAutoscalingScaleDownAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: 90
      Statistic: Maximum
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 60
      AlarmActions:
        - Ref: NetscanProcessASNAutoscalingScaleDown
      Namespace: 'AWS/SQS'
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - QueueProcessASN
              - QueueName


